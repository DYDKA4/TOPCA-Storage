node_types:
  amazon.nodes.Group:
    capabilities:
      feature:
        occurrences:
        - 1
        - 1
        type: amazon.capabilities.Node
    description: 'The TOSCA root node all other TOSCA base node types derive from.

      '
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
    properties:
      description:
        required: false
        type: string
      group_id:
        required: false
        type: string
      name:
        required: true
        type: string
      rules:
        entry_schema:
          type: amazon.datatypes.SecurityGroupRule
        required: false
        type: list
      rules_egress:
        entry_schema:
          type: amazon.datatypes.SecurityGroupRule
        required: false
        type: list
      state:
        description: "The state of the node instance. See section \u201CNode States\u201D\
          \ for allowed values.\n"
        required: false
        type: string
      tosca_id:
        description: 'A unique identifier of the realized instance of a Node Template
          that derives from any TOSCA normative type.

          '
        required: false
        type: string
      tosca_name:
        description: 'This attribute reflects the name of the Node Template as defined
          in the TOSCA service template.

          '
        required: false
        type: string
    requirements:
    - dependency:
        capability: tosca.capabilities.Node
        node: tosca.nodes.Root
        occurrences:
        - 0
        - UNBOUNDED
        relationship: tosca.relationships.DependsOn
    - dependency:
        capability: amazon.capabilities.Node
        node: amazon.nodes.Root
        occurrences:
        - 0
        - UNBOUNDED
        relationship: amazon.relationships.DependsOn
    - vpc_id:
        capability: amazon.capabilities.Node
        node: amazon.nodes.VpcNet
        occurrences:
        - 0
        - 1
        relationship: amazon.relationships.DependsOn
  amazon.nodes.Instance:
    capabilities:
      bind:
        occurrences:
        - 0
        - UNBOUNDED
        type: amazon.capabilities.network.Bindable
      feature:
        occurrences:
        - 1
        - 1
        type: amazon.capabilities.Node
    description: 'The TOSCA root node all other TOSCA base node types derive from.

      '
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
    properties:
      image:
        required: false
        type: amazon.datatypes.Image
      instance_id:
        required: false
        type: string
      name:
        required: false
        type: string
      network:
        required: false
        type: amazon.datatypes.ElasticNeworkInterface
      public_ip_address:
        required: false
        type: string
      state:
        description: "The state of the node instance. See section \u201CNode States\u201D\
          \ for allowed values.\n"
        required: false
        type: string
      tags:
        required: false
        type: map
      tosca_id:
        description: 'A unique identifier of the realized instance of a Node Template
          that derives from any TOSCA normative type.

          '
        required: false
        type: string
      tosca_name:
        description: 'This attribute reflects the name of the Node Template as defined
          in the TOSCA service template.

          '
        required: false
        type: string
      vpc_subnet_id:
        required: false
        type: string
    requirements:
    - dependency:
        capability: tosca.capabilities.Node
        node: tosca.nodes.Root
        occurrences:
        - 0
        - UNBOUNDED
        relationship: tosca.relationships.DependsOn
    - dependency:
        capability: amazon.capabilities.Node
        node: amazon.nodes.Root
        occurrences:
        - 0
        - UNBOUNDED
        relationship: amazon.relationships.DependsOn
    - key_name:
        capability: amazon.capabilities.Node
        node: amazon.nodes.Key
        occurrences:
        - 0
        - 1
        relationship: amazon.relationships.DependsOn
    - instance_type:
        capability: amazon.capabilities.Node
        node: amazon.nodes.instanceType
        occurrences:
        - 1
        - 1
        relationship: amazon.relationships.DependsOn
    - image_id:
        capability: amazon.capabilities.Node
        node: amazon.nodes.Ami
        occurrences:
        - 1
        - 1
        relationship: amazon.relationships.DependsOn
    - network:
        capability: amazon.capabilities.Node
        node: amazon.nodes.Eni
        occurrences:
        - 0
        - UNBOUNDED
        relationship: amazon.relationships.DependsOn
    - security_groups:
        capability: amazon.capabilities.Node
        node: amazon.nodes.Group
        occurrences:
        - 0
        - UNBOUNDED
        relationship: amazon.relationships.DependsOn
    - vpc_subnet_id:
        capability: amazon.capabilities.Node
        node: amazon.nodes.VpcSubnet
        occurrences:
        - 0
        - 1
        relationship: amazon.relationships.DependsOn
  amazon.nodes.Key:
    capabilities:
      feature:
        occurrences:
        - 1
        - 1
        type: amazon.capabilities.Node
    description: 'The TOSCA root node all other TOSCA base node types derive from.

      '
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
    properties:
      key_material:
        required: false
        type: string
      key_type:
        required: false
        type: string
      name:
        required: true
        type: string
      profile:
        required: false
        type: string
      state:
        description: "The state of the node instance. See section \u201CNode States\u201D\
          \ for allowed values.\n"
        required: false
        type: string
      tosca_id:
        description: 'A unique identifier of the realized instance of a Node Template
          that derives from any TOSCA normative type.

          '
        required: false
        type: string
      tosca_name:
        description: 'This attribute reflects the name of the Node Template as defined
          in the TOSCA service template.

          '
        required: false
        type: string
    requirements:
    - dependency:
        capability: tosca.capabilities.Node
        node: tosca.nodes.Root
        occurrences:
        - 0
        - UNBOUNDED
        relationship: tosca.relationships.DependsOn
    - dependency:
        capability: amazon.capabilities.Node
        node: amazon.nodes.Root
        occurrences:
        - 0
        - UNBOUNDED
        relationship: amazon.relationships.DependsOn
  tosca.nodes.SoftwareComponent:
    capabilities:
      feature:
        type: tosca.capabilities.Node
    description: 'The TOSCA SoftwareComponent node represents a generic software component
      that can be managed and run by a TOSCA Compute Node Type.

      '
    interfaces:
      Standard:
        type: tosca.interfaces.node.lifecycle.Standard
    properties:
      admin_credential:
        required: false
        type: tosca.datatypes.Credential
      component_version:
        description: 'Software component version.

          '
        required: false
        type: version
      state:
        description: "The state of the node instance. See section \u201CNode States\u201D\
          \ for allowed values.\n"
        required: false
        type: string
      tosca_id:
        description: 'A unique identifier of the realized instance of a Node Template
          that derives from any TOSCA normative type.

          '
        required: false
        type: string
      tosca_name:
        description: 'This attribute reflects the name of the Node Template as defined
          in the TOSCA service template.

          '
        required: false
        type: string
    requirements:
    - dependency:
        capability: tosca.capabilities.Node
        node: tosca.nodes.Root
        occurrences:
        - 0
        - UNBOUNDED
        relationship: tosca.relationships.DependsOn
    - host:
        capability: tosca.capabilities.Container
        node: tosca.nodes.Compute
        relationship: tosca.relationships.HostedOn
topology_template:
  node_templates:
    software_for_cumulus_software_component:
      interfaces:
        Standard:
          create:
            implementation: ansible-operation-example.yaml
      requirements:
      - host:
          node: testing_tosca_instance
          node_filter:
            properties:
            - name: testing_tosca_{{ item }}
            - network:
                assign_public_ip: true
            - tags:
                metadata: cube_master=true
            - id: '{{ testing_tosca_instance_delete }}'
      - dependency:
          node: testing_tosca_instance
          node_filter:
            properties:
            - name: testing_tosca_{{ item }}
            - network:
                assign_public_ip: true
            - tags:
                metadata: cube_master=true
            - id: '{{ testing_tosca_instance_delete }}'
      - dependency:
          node: testing_tosca_key
          node_filter:
            properties:
            - key_material: '{{ lookup(''file'', ''~/.ssh/id_rsa.pub'') }}'
            - name: testing_tosca_key
            - id: '{{ testing_tosca_key_delete }}'
      - dependency:
          node: testing_tosca_group
          node_filter:
            properties:
            - description: testing_tosca_group
            - name: testing_tosca_group
            - rules:
              - cidr_ip: 0.0.0.0
                ports:
                - 22
                proto: tcp
              - cidr_ip: 0.0.0.0
            - rules_egress:
              - cidr_ip: 0.0.0.0
            - id: '{{ testing_tosca_group_delete }}'
      type: tosca.nodes.SoftwareComponent
    testing_tosca_group:
      properties:
        description: testing_tosca_group
        name: testing_tosca_group
        rules:
        - cidr_ip: 0.0.0.0
          ports:
          - 22
          proto: tcp
        - cidr_ip: 0.0.0.0
        rules_egress:
        - cidr_ip: 0.0.0.0
      type: amazon.nodes.Group
    testing_tosca_instance:
      interfaces:
        Standard:
          create:
            implementation: add_host.yaml
            inputs:
              ansible_user: xenial
              group: testing_tosca_instance_public_address
              host_ip: '{{ host_ip | default([]) + [[ "testing_tosca_public_address_"
                + item, testing_tosca_instance.results[item | int - 1].instances[0].public_ip_address
                ]] }}'
      properties:
        name: testing_tosca_{{ item }}
        network:
          assign_public_ip: true
        tags:
          metadata: cube_master=true
      requirements:
      - key_name:
          node: testing_tosca_key
          node_filter:
            properties:
            - key_material: '{{ lookup(''file'', ''~/.ssh/id_rsa.pub'') }}'
            - name: testing_tosca_key
            - id: '{{ testing_tosca_key_delete }}'
      - vpc_subnet_id:
          node_filter:
            properties:
            - id: not implemented yet
      - instance_type:
          node_filter:
            properties:
            - vcpus: 1
            - storage: 5.0
            - memory: 1.0
      - security_groups:
          node: testing_tosca_group
          node_filter:
            properties:
            - description: testing_tosca_group
            - name: testing_tosca_group
            - rules:
              - cidr_ip: 0.0.0.0
                ports:
                - 22
                proto: tcp
              - cidr_ip: 0.0.0.0
            - rules_egress:
              - cidr_ip: 0.0.0.0
            - id: '{{ testing_tosca_group_delete }}'
      - image_id:
          node_filter:
            properties:
            - image_id: not implemented yet
      type: amazon.nodes.Instance
    testing_tosca_key:
      properties:
        key_material: '{{ lookup(''file'', ''~/.ssh/id_rsa.pub'') }}'
        name: testing_tosca_key
      type: amazon.nodes.Key
tosca_definitions_version: tosca_simple_yaml_1_0
