capability_types:
  michman.capabilities.Jupyter:
    attributes: {}
    derived_from: tosca.capabilities.Root
    metadata:
      abstract: 'false'
      final: 'false'
      targetNamespace: michman.capabilities
    properties: {}
    valid_source_types: []
  michman.capabilities.Spark:
    attributes: {}
    derived_from: tosca.capabilities.Root
    metadata:
      abstract: 'false'
      final: 'false'
      targetNamespace: michman.capabilities
    properties: {}
    valid_source_types: []
  tosca.capabilities.Attachment:
    attributes: {}
    derived_from: tosca.capabilities.Root
    metadata:
      abstract: 'false'
      final: 'false'
      targetNamespace: tosca.capabilities
    properties: {}
    valid_source_types: []
  tosca.capabilities.Compute:
    attributes: {}
    derived_from: tosca.capabilities.Container
    metadata:
      abstract: 'false'
      final: 'false'
      targetNamespace: tosca.capabilities
    properties:
      cpu_frequency:
        constraints:
        - greater_or_equal: 0.1 GHz
        entry_schema: {}
        key_schema: {}
        metadata: {}
        status: supported
        type: frequency
      disk_size:
        constraints:
        - greater_or_equal: 0 MB
        entry_schema: {}
        key_schema: {}
        metadata: {}
        status: supported
        type: size
      mem_size:
        constraints:
        - greater_or_equal: 0 MB
        entry_schema: {}
        key_schema: {}
        metadata: {}
        status: supported
        type: size
      name:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        status: supported
        type: string
      num_cpus:
        constraints:
        - greater_or_equal: 1
        entry_schema: {}
        key_schema: {}
        metadata: {}
        status: supported
        type: integer
    valid_source_types: []
  tosca.capabilities.Container:
    attributes: {}
    derived_from: tosca.capabilities.Root
    metadata:
      abstract: 'false'
      final: 'false'
      targetNamespace: tosca.capabilities
    properties: {}
    valid_source_types: []
  tosca.capabilities.Endpoint:
    attributes:
      ip_address:
        entry_schema: {}
        key_schema: {}
        type: string
    derived_from: tosca.capabilities.Root
    metadata: {}
    properties:
      initiator:
        constraints:
        - valid_values: '[''source'', ''target'', ''peer'']'
        default: source
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
      network_name:
        constraints: []
        default: PRIVATE
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
      port:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: tosca.datatypes.network.PortDef
      port_name:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
      ports:
        constraints:
        - min_length: 1
        entry_schema:
          constraints: []
          entry_schema: {}
          key_schema: {}
          type: tosca.datatypes.network.PortSpec
        key_schema: {}
        metadata: {}
        type: map
      protocol:
        constraints: []
        default: tcp
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: true
        type: string
      secure:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: boolean
      url_path:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
    valid_source_types: []
  tosca.capabilities.Endpoint.Admin:
    attributes: {}
    derived_from: tosca.capabilities.Endpoint
    metadata: {}
    properties:
      secure:
        constraints:
        - equal: 'True'
        default: true
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: boolean
    valid_source_types: []
  tosca.capabilities.Node:
    attributes: {}
    derived_from: tosca.capabilities.Root
    metadata: {}
    properties: {}
    valid_source_types: []
  tosca.capabilities.OperatingSystem:
    attributes: {}
    derived_from: tosca.capabilities.Root
    metadata: {}
    properties:
      architecture:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
      distribution:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
      type:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
      version:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: version
    valid_source_types: []
  tosca.capabilities.Root:
    attributes: {}
    description: The TOSCA root Capability Type all other TOSCA Capability Types derive
      from
    metadata: {}
    properties: {}
    valid_source_types: []
  tosca.capabilities.Scalable:
    attributes: {}
    derived_from: tosca.capabilities.Root
    metadata: {}
    properties:
      default_instances:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: integer
      max_instances:
        constraints: []
        default: '1'
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: integer
      min_instances:
        constraints: []
        default: '1'
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: integer
    valid_source_types: []
  tosca.capabilities.network.Bindable:
    attributes: {}
    derived_from: tosca.capabilities.Node
    metadata: {}
    properties: {}
    valid_source_types: []
data_types:
  integer:
    constraints: []
    entry_schema: {}
    key_schema: {}
    metadata: {}
    properties: {}
  tosca.datatypes.Root:
    constraints: []
    description: The TOSCA root Data Type all other TOSCA base Data Types derive from
    entry_schema: {}
    key_schema: {}
    metadata: {}
    properties: {}
  tosca.datatypes.network.NetworkInfo:
    constraints: []
    derived_from: tosca.datatypes.Root
    entry_schema: {}
    key_schema: {}
    metadata: {}
    properties:
      addresses:
        constraints: []
        entry_schema:
          constraints: []
          entry_schema: {}
          key_schema: {}
          type: string
        key_schema: {}
        metadata: {}
        type: list
      network_id:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
      network_name:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
  tosca.datatypes.network.PortDef:
    constraints:
    - in_range: '[1, 65535]'
    derived_from: integer
    entry_schema: {}
    key_schema: {}
    metadata: {}
    properties: {}
  tosca.datatypes.network.PortInfo:
    constraints: []
    derived_from: tosca.datatypes.Root
    entry_schema: {}
    key_schema: {}
    metadata: {}
    properties:
      addresses:
        constraints: []
        entry_schema:
          constraints: []
          entry_schema: {}
          key_schema: {}
          type: string
        key_schema: {}
        metadata: {}
        type: list
      mac_address:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
      network_id:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
      port_id:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
      port_name:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
  tosca.datatypes.network.PortSpec:
    constraints: []
    derived_from: tosca.datatypes.Root
    entry_schema: {}
    key_schema: {}
    metadata: {}
    properties:
      protocol:
        constraints:
        - valid_values: '[''udp'', ''tcp'', ''igmp'']'
        default: tcp
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: true
        type: string
      source:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: tosca.datatypes.network.PortDef
      source_range:
        constraints:
        - in_range: '[1, 65535]'
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: range
      target:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: tosca.datatypes.network.PortDef
      target_range:
        constraints:
        - in_range: '[1, 65535]'
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: range
interface_types:
  tosca.interfaces.Root:
    description: The TOSCA root Interface Type all other TOSCA Interface Types derive
      from
    inputs: {}
    metadata: {}
    notifications: {}
    operations: {}
  tosca.interfaces.node.lifecycle.Standard:
    derived_from: tosca.interfaces.Root
    inputs: {}
    metadata: {}
    notifications: {}
    operations: {}
  tosca.interfaces.relationship.Configure:
    derived_from: tosca.interfaces.Root
    inputs: {}
    metadata: {}
    notifications: {}
    operations: {}
node_types:
  michman.nodes.Jupyter.Jupyter-6-0-1:
    artifacts: {}
    attributes: {}
    capabilities:
      dependence:
        attributes: {}
        properties: {}
        type: michman.capabilities.Jupyter
        valid_source_types: []
    derived_from: tosca.nodes.SoftwareComponent
    description: Jupyter version 6.0.1 (latest for pip install)
    interfaces: {}
    metadata:
      abstract: 'false'
      final: 'false'
      targetNamespace: michman.nodes.Jupyter
    properties:
      client:
        constraints: []
        default: 5.3.1
        description: default jupyter client version (now this config param is not
          supported)
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
      core:
        constraints:
        - valid_values: '[''4.5.0'']'
        default: 4.5.0
        description: default jupyter core version (now this config param is not supported)
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
      ipykernel:
        constraints: []
        default: 5.1.2
        description: default ipykernel version (now this config param is not supported)
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
      ipython:
        constraints: []
        default: 7.8.0
        description: default ipython version (now this config param is not supported)
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
      ipywidgets:
        constraints: []
        default: '-'
        description: now ipywidgets is not installed (now this config param is not
          supported)
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
      lab:
        constraints: []
        default: 1.1.1
        description: default jupyter lab version (now this config param is not supported)
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
      nbconvert:
        constraints: []
        default: 5.6.0
        description: default nbconvert version (now this config param is not supported)
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
      nbformat:
        constraints: []
        default: 4.4.0
        description: default nbformat version (now this config param is not supported)
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
      qtconsole:
        constraints:
        - valid_values: '[''-'']'
        default: '-'
        description: now qtconsole is not installed (now this config param is not
          supported)
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
      spark_component_version:
        constraints:
        - valid_values: '[''1.0.0'', ''1.0.1'', ''1.0.2'', ''1.1.0'', ''1.1.1'', ''1.2.0'',
            ''1.2.1'', ''1.2.2'', ''1.3.0'', ''1.3.1'', ''1.4.0'', ''1.4.1'', ''1.5.0'',
            ''1.5.1'', ''1.5.2'', ''1.6.0'', ''1.6.1'', ''1.6.2'', ''2.0.0'', ''2.0.1'',
            ''2.0.2'', ''2.1.0'', ''2.2.0'', ''2.2.1'', ''2.3.0'']'
        description: 'Setup version required. Default version is 2.3.0. Supported
          versions: >= 1.0.0, <= 2.3.0'
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: true
        type: string
      traitlets:
        constraints: []
        default: 4.3.2
        description: default traitlets version (now this config param is not supported)
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
      version:
        constraints:
        - valid_values: '[''6.0.1'']'
        default: 6.0.1
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
    requirements:
    - spark:
        capability: michman.capabilities.Spark
        node: tosca.relationships.DependsOn
        occurrences:
        - 1
        - 1
        relationship:
          type: tosca.relationships.DependsOn
  tosca.nodes.Abstract.Compute:
    artifacts: {}
    attributes: {}
    capabilities:
      host:
        attributes: {}
        properties: {}
        type: tosca.capabilities.Compute
        valid_source_types: []
    derived_from: tosca.nodes.Root
    interfaces: {}
    metadata: {}
    properties: {}
    requirements: []
  tosca.nodes.Abstract.Storage:
    artifacts: {}
    attributes: {}
    capabilities: {}
    derived_from: tosca.nodes.Root
    interfaces: {}
    metadata: {}
    properties:
      name:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
      size:
        constraints:
        - greater_or_equal: 0 MB
        default: 0 MB
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: size
    requirements: []
  tosca.nodes.Compute:
    artifacts: {}
    attributes:
      networks:
        entry_schema:
          constraints: []
          entry_schema: {}
          key_schema: {}
          type: tosca.datatypes.network.NetworkInfo
        key_schema: {}
        type: map
      ports:
        entry_schema:
          constraints: []
          entry_schema: {}
          key_schema: {}
          type: tosca.datatypes.network.PortInfo
        key_schema: {}
        type: map
      private_address:
        entry_schema: {}
        key_schema: {}
        type: string
      public_address:
        entry_schema: {}
        key_schema: {}
        type: string
    capabilities:
      binding:
        attributes: {}
        properties: {}
        type: tosca.capabilities.network.Bindable
        valid_source_types: []
      endpoint:
        attributes: {}
        properties: {}
        type: tosca.capabilities.Endpoint.Admin
        valid_source_types: []
      host:
        attributes: {}
        properties: {}
        type: tosca.capabilities.Compute
        valid_source_types:
        - tosca.nodes.SoftwareComponent
      os:
        attributes: {}
        properties: {}
        type: tosca.capabilities.OperatingSystem
        valid_source_types: []
      scalable:
        attributes: {}
        properties: {}
        type: tosca.capabilities.Scalable
        valid_source_types: []
    derived_from: tosca.nodes.Abstract.Compute
    interfaces: {}
    metadata: {}
    properties: {}
    requirements:
    - local_storage:
        capability: tosca.capabilities.Attachment
        node: tosca.relationships.AttachesTo
        occurrences:
        - 0
        - UNBOUNDED
        relationship:
          type: tosca.relationships.AttachesTo
  tosca.nodes.Root:
    artifacts: {}
    attributes:
      state:
        default: initial
        entry_schema: {}
        key_schema: {}
        type: string
      tosca_id:
        entry_schema: {}
        key_schema: {}
        type: string
      tosca_name:
        entry_schema: {}
        key_schema: {}
        type: string
    capabilities:
      feature:
        attributes: {}
        occurrences:
        - 1
        - UNBOUNDED
        properties: {}
        type: tosca.capabilities.Node
        valid_source_types: []
    description: The TOSCA Node Type all other TOSCA base Node Types derive from
    interfaces:
      Standard:
        notifications: {}
        operations: {}
        type: tosca.interfaces.node.lifecycle.Standard
    metadata:
      abstract: 'false'
      final: 'false'
      targetNamespace: tosca.nodes
    properties: {}
    requirements:
    - dependency:
        capability: tosca.capabilities.Node
        node: tosca.relationships.DependsOn
        occurrences:
        - 0
        - UNBOUNDED
        relationship:
          type: tosca.relationships.DependsOn
  tosca.nodes.SoftwareComponent:
    artifacts: {}
    attributes: {}
    capabilities: {}
    derived_from: tosca.nodes.Root
    interfaces: {}
    metadata:
      abstract: 'false'
      final: 'false'
      targetNamespace: tosca.nodes
    properties: {}
    requirements:
    - host:
        capability: tosca.capabilities.Compute
        node: tosca.relationships.HostedOn
        occurrences:
        - 1
        - 1
        relationship:
          type: tosca.relationships.HostedOn
  tosca.nodes.Storage.BlockStorage:
    artifacts: {}
    attributes: {}
    capabilities:
      attachment:
        attributes: {}
        occurrences:
        - 1
        - UNBOUNDED
        properties: {}
        type: tosca.capabilities.Attachment
        valid_source_types: []
    derived_from: tosca.nodes.Abstract.Storage
    interfaces: {}
    metadata:
      abstract: 'false'
      final: 'false'
      targetNamespace: tosca.nodes.Storage
    properties:
      snapshot_id:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        status: supported
        type: string
      volume_id:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        status: supported
        type: string
    requirements: []
relationship_types:
  tosca.relationships.AttachesTo:
    attributes: {}
    derived_from: tosca.relationships.Root
    interfaces: {}
    metadata: {}
    properties:
      device:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
      location:
        constraints:
        - min_length: 1
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
    valid_target_types:
    - tosca.capabilities.Attachment
  tosca.relationships.DependsOn:
    attributes: {}
    derived_from: tosca.relationships.Root
    interfaces: {}
    metadata:
      abstract: 'false'
      final: 'false'
      targetNamespace: tosca.relationships
    properties: {}
    valid_target_types:
    - tosca.capabilities.Container
  tosca.relationships.HostedOn:
    attributes: {}
    derived_from: tosca.relationships.Root
    interfaces: {}
    metadata: {}
    properties: {}
    valid_target_types:
    - tosca.capabilities.Container
  tosca.relationships.Root:
    attributes:
      tosca_id:
        entry_schema: {}
        key_schema: {}
        type: string
      tosca_name:
        entry_schema: {}
        key_schema: {}
        type: string
    description: The TOSCA root Relationship Type all other TOSCA base Relationship
      Types derive from
    interfaces:
      Configure:
        notifications: {}
        operations: {}
        type: tosca.interfaces.relationship.Configure
    metadata: {}
    properties: {}
    valid_target_types: []
topology_template:
  groups: {}
  inputs: {}
  node_templates: {}
  outputs: {}
  policies: []
  relationship_templates: {}
  workflows: {}
tosca_definitions_version: 1.3
