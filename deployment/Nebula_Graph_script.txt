USE `Tosca_Templates`
CREATE tag `AttributeAssignment` (`name` string NULL  , `value` string NULL  , `description` string NULL  , `vertex_type_system` string NULL  );
CREATE TAG INDEX `IndexAttributeAssignment` on `AttributeAssignment`();
CREATE tag `CapabilityAssignment` (`name` string NULL  , `vertex_type_system` string NULL  );
CREATE TAG INDEX `IndexCapabilityAssignment` on `CapabilityAssignment`();
CREATE edge `properties` ();
CREATE EDGE INDEX `index_properties` on `properties`();
CREATE edge `attributes` ();
CREATE EDGE INDEX `index_attributes` on `attributes`();
CREATE edge `occurrences` ();
CREATE EDGE INDEX `index_occurrences` on `occurrences`();
CREATE tag `PropertyAssignment` (`name` string NULL  , `value` string NULL  , `vertex_type_system` string NULL  );
CREATE TAG INDEX `IndexPropertyAssignment` on `PropertyAssignment`();
CREATE edge `get_property` ();
CREATE EDGE INDEX `index_get_property` on `get_property`();
CREATE edge `get_input` ();
CREATE EDGE INDEX `index_get_input` on `get_input`();
CREATE tag `RequirementAssignment` (`name` string NULL  , `vertex_type_system` string NULL  );
CREATE TAG INDEX `IndexRequirementAssignment` on `RequirementAssignment`();
CREATE edge `node` ();
CREATE EDGE INDEX `index_node` on `node`();
CREATE edge `relationship` ();
CREATE EDGE INDEX `index_relationship` on `relationship`();
CREATE edge `interfaces` ();
CREATE EDGE INDEX `index_interfaces` on `interfaces`();
CREATE edge `capability` ();
CREATE EDGE INDEX `index_capability` on `capability`();
CREATE edge `node_filter` ();
CREATE EDGE INDEX `index_node_filter` on `node_filter`();
CREATE tag `CallOperationActivityDefinition` (`vertex_type_system` string NULL  );
CREATE TAG INDEX `IndexCallOperationActivityDefinition` on `CallOperationActivityDefinition`();
CREATE edge `inputs` ();
CREATE EDGE INDEX `index_inputs` on `inputs`();
CREATE tag `DelegateWorkflowActivityDefinition` (`vertex_type_system` string NULL  );
CREATE TAG INDEX `IndexDelegateWorkflowActivityDefinition` on `DelegateWorkflowActivityDefinition`();
CREATE tag `SetStateActivityDefinition` (`vertex_type_system` string NULL  );
CREATE TAG INDEX `IndexSetStateActivityDefinition` on `SetStateActivityDefinition`();
CREATE tag `ArtifactDefinition` (`name` string NULL  , `vertex_type_system` string NULL  , `description` string NULL  , `file` string NULL  , `repository` string NULL  , `deploy_path` string NULL  , `version` string NULL  , `checksum` string NULL  , `checksum_algorithm` string NULL  );
CREATE TAG INDEX `IndexArtifactDefinition` on `ArtifactDefinition`();
CREATE tag `AssertDefinition` (`attribute_name` string NULL  , `vertex_type_system` string NULL  );
CREATE TAG INDEX `IndexAssertDefinition` on `ArtifactDefinition`();
CREATE edge `constraint_clauses` ();
CREATE EDGE INDEX `index_constraint_clauses` on `constraint_clauses`;
CREATE tag `AttributeDefinition` (`vertex_type_system` string NULL  , `name` string NULL  , `description` string NULL  , `default` string NULL  , `status` string NULL  );
CREATE TAG INDEX `IndexAttributeDefinition` on `AttributeDefinition`();
CREATE edge `type` ();
CREATE EDGE INDEX `index_type` on `type' ();
CREATE edge `entry_schema` ();z
CREATE EDGE INDEX `index_entry_schema` on `entry_schema'();
CREATE edge `key_schema` ();
CREATE EDGE INDEX `index_key_schema` on `key_schema'();
CREATE tag `CapabilityDefinition` (`vertex_type_system` string NULL  , `name` string NULL  , `description` string NULL  );
CREATE TAG INDEX `IndexCapabilityDefinition` on `CapabilityDefinition`();
CREATE edge `valid_source_types` ();
CREATE EDGE INDEX `index_valid_source_types` on `valid_source_types' ();
CREATE tag `CapabilityFilterDefinition` (`name` string NULL  , `vertex_type_system` string NULL  );
CREATE TAG INDEX `IndexCapabilityFilterDefinition` on `CapabilityFilterDefinition`();
CREATE tag `ConditionClauseDefinition` (`type` string NULL  , `vertex_type_system` string NULL  );
CREATE TAG INDEX `IndexConditionClauseDefinition` on `ConditionClauseDefinition`();
CREATE edge `condition_not` ();
CREATE EDGE INDEX `index_condition_not` on `condition_not' ();
CREATE edge `condition_or` ();
CREATE EDGE INDEX `index_condition_or` on `condition_or' ();
CREATE edge `condition_and` ();
CREATE EDGE INDEX `index_condition_and` on `condition_and';
CREATE edge `condition_assert` ();
CREATE EDGE INDEX `index_condition_assert` on `condition_assert';
CREATE tag `EventFilterDefinition` (`vertex_type_system` string NULL  );
CREATE TAG INDEX `IndexEventFilterDefinition` on `EventFilterDefinition`();
CREATE tag `GroupDefinition` (`name` string NULL  , `vertex_type_system` string NULL  , `description` string NULL  );
CREATE TAG INDEX `IndexGroupDefinition` on `GroupDefinition`();
CREATE edge `metadata` ();
CREATE EDGE INDEX `index_metadata` on `metadata';
CREATE edge `members` ();
CREATE EDGE INDEX `index_members` on `members';
CREATE tag `ImperativeWorkflowDefinition` (`vertex_type_system` string NULL  , `description` string NULL  , `name` string NULL  , `outputs` string NULL  );
CREATE TAG INDEX `IndexImperativeWorkflowDefinition` on `ImperativeWorkflowDefinition`();
CREATE edge `preconditions` ();
CREATE EDGE INDEX `index_preconditions` on `preconditions';
CREATE edge `steps` ();
CREATE EDGE INDEX `index_steps` on `steps';
CREATE edge `implementation` ();
CREATE EDGE INDEX `index_implementation` on `implementation';
CREATE tag `ImportDefinition` (`vertex_type_system` string NULL  , `file` string NULL  , `repository` string NULL  , `namespace_uri` string NULL  , `namespace_prefix` string NULL  );
CREATE TAG INDEX `IndexImportDefinition` on `ImportDefinition`();
CREATE tag `InterfaceDefinition` (`name` string NULL  , `vertex_type_system` string NULL  );
CREATE TAG INDEX `IndexInterfaceDefinition` on `InterfaceDefinition`();
CREATE edge `operations` ();
CREATE EDGE INDEX `index_operations` on `operations';
CREATE edge `notifications` ();
CREATE EDGE INDEX `index_notifications` on `notifications';
CREATE tag `NodeFilterDefinition` (`vertex_type_system` string NULL  );
CREATE TAG INDEX `IndexNodeFilterDefinition` on `NodeFilterDefinition`();
CREATE edge `capabilities` ();
CREATE EDGE INDEX `index_capabilities` on `capabilities`();
CREATE tag `NotificationDefinition` (`name` string NULL  , `vertex_type_system` string NULL  , `description` string NULL  );
CREATE TAG INDEX `IndexNotificationDefinition` on `NotificationDefinition`();
CREATE edge `outputs` ();
CREATE EDGE INDEX `index_outputs` on `outputs`();
CREATE tag `NotificationImplementationDefinition` (`vertex_type_system` string NULL  );
CREATE TAG INDEX `IndexNotificationImplementationDefinition` on `NotificationImplementationDefinition`();
CREATE edge `primary` (`type` string NULL  );
CREATE EDGE INDEX `index_primary` on `primary`();
CREATE edge `dependencies` ();
CREATE EDGE INDEX `index_dependencies` on `dependencies`();
CREATE tag `OperationDefinition` (`name` string NULL  , `vertex_type_system` string NULL  , `description` string NULL  );
CREATE TAG INDEX `IndexOperationDefinition` on `OperationDefinition`();
CREATE tag `OperationImplementationDefinition` (`vertex_type_system` string NULL  , `operation_host` string NULL  , `timeout` string NULL  );
CREATE TAG INDEX `IndexOperationImplementationDefinition` on `OperationImplementationDefinition`();
CREATE tag `ParameterDefinition` (`name` string NULL  , `vertex_type_system` string NULL  , `value` string NULL  , `required` string NULL  , `default` string NULL  , `status` string NULL , `description` string NULL  );
CREATE TAG INDEX `IndexParameterDefinition` on `ParameterDefinition`();
CREATE tag `PolicyDefinition` (`name` string NULL  , `vertex_type_system` string NULL  , `description` string NULL  );
CREATE TAG INDEX `IndexPolicyDefinition` on `PolicyDefinition`();
CREATE edge `targets` ();
CREATE EDGE INDEX `index_targets` on `targets`();
CREATE edge `triggers` ();
CREATE EDGE INDEX `index_triggers` on `triggers`();
CREATE tag `PropertyDefinition` (`name` string NULL  , `vertex_type_system` string NULL  , `description` string NULL  , `required` string NULL  , `default` string NULL  , `status` string NULL  );
CREATE TAG INDEX `IndexPropertyDefinition` on `PropertyDefinition`();
CREATE edge `constraints` ();
CREATE EDGE INDEX `index_constraints` on `constraints`();
CREATE tag `PropertyFilterDefinition` (`name` string NULL  , `vertex_type_system` string NULL  );
CREATE TAG INDEX `IndexPropertyFilterDefinition` on `PropertyFilterDefinition`();
CREATE edge `property_constraint` ();
CREATE EDGE INDEX `index_property_constraint` on `property_constraint`();
CREATE tag `RepositoryDefinition` (`name` string NULL  , `vertex_type_system` string NULL  , `url` string NULL  , `description` string NULL  , `credential` string NULL  );
CREATE TAG INDEX `IndexRepositoryDefinition` on `RepositoryDefinition`();
CREATE tag `RequirementDefinition` (`vertex_type_system` string NULL  , `name` string NULL  );
CREATE TAG INDEX `IndexRequirementDefinition` on `RequirementDefinition`();
CREATE tag `SchemaDefinition` (`description` string NULL  , `vertex_type_system` string NULL  );
CREATE TAG INDEX `IndexSchemaDefinition` on `SchemaDefinition`();
CREATE tag `ServiceTemplateDefinition` (`tosca_definitions_version` string NULL  , `name` string NULL  , `namespace` string NULL  , `vertex_type_system` string NULL  , `description` string NULL  , `dsl_definitions` string NULL , `template_type` string NULL  );
CREATE TAG INDEX `IndexServiceTemplateDefinition` on `ServiceTemplateDefinition`();
CREATE edge `repositories` ();
CREATE EDGE INDEX `index_repositories` on `repositories`();
CREATE edge `imports` ();
CREATE EDGE INDEX `index_imports` on `imports`();
CREATE edge `artifact_types` ();
CREATE EDGE INDEX `index_artifact_types` on `artifact_types`();
CREATE edge `data_types` ();
CREATE EDGE INDEX `index_data_types` on `data_types`();
CREATE edge `capability_types` ();
CREATE EDGE INDEX `index_capability_types` on `capability_types`();
CREATE edge `interface_types` ();
CREATE EDGE INDEX `index_interface_types` on `interface_types`();
CREATE edge `relationship_types` ();
CREATE EDGE INDEX `index_relationship_types` on `relationship_types`();
CREATE edge `node_types` ();
CREATE EDGE INDEX `index_node_types` on `node_types`();
CREATE edge `group_types` ();
CREATE EDGE INDEX `index_group_types` on `group_types`();
CREATE edge `policy_types` ();
CREATE EDGE INDEX `index_policy_types` on `policy_types`();
CREATE edge `topology_template` ();
CREATE EDGE INDEX `index_topology_template` on `topology_template`();
CREATE edge `triggers` ();
CREATE EDGE INDEX `index_` on `triggers`();
CREATE edge `triggers` ();
CREATE EDGE INDEX `index_` on `triggers`();
CREATE tag `TopologyTemplateDefinition` (`vertex_type_system` string NULL  , `description` string NULL  , `substitution_mappings` string NULL  );
CREATE TAG INDEX `IndexTopologyTemplateDefinition` on `TopologyTemplateDefinition`();
CREATE edge `node_templates` ();
CREATE EDGE INDEX `index_node_templates` on `node_templates`();
CREATE edge `relationship_templates` ();
CREATE EDGE INDEX `index_relationship_templates` on `relationship_templates`();
CREATE edge `groups` ();
CREATE EDGE INDEX `index_groups` on `groups`();
CREATE edge `policies` ();
CREATE EDGE INDEX `index_policies` on `policies`();
CREATE edge `workflows` ();
CREATE EDGE INDEX `index_workflows` on `workflows`();
CREATE tag `TriggerDefinition` (`name` string NULL  , `vertex_type_system` string NULL  , `description` string NULL  , `event` string NULL  , `schedule_start` string NULL  , `schedule_end` string NULL  , `period` string NULL  , `evaluations` string NULL  , `method` string NULL  );
CREATE TAG INDEX `IndexTriggerDefinition` on `TriggerDefinition`();
CREATE edge `action` ();
CREATE EDGE INDEX `index_action` on `action`();
CREATE edge `constraint` ();
CREATE EDGE INDEX `index_constraint` on `constraint`();
CREATE edge `event_filter` ();
CREATE EDGE INDEX `index_event_filter` on `event_filter`();
CREATE tag `WorkflowPreconditionDefinition` (`vertex_type_system` string NULL  );
CREATE TAG INDEX `IndexWorkflowPreconditionDefinition` on `WorkflowPreconditionDefinition`();
CREATE edge `target` ();
CREATE EDGE INDEX `index_target` on `target`();
CREATE edge `target_relationship` ();
CREATE EDGE INDEX `index_target_relationship` on `target_relationship`();
CREATE edge `conditions` ();
CREATE EDGE INDEX `index_conditions` on `conditions`();
CREATE tag `WorkflowStepDefinition` (`vertex_type_system` string NULL  , `name` string NULL  , `operation_host` string NULL  );
CREATE TAG INDEX `IndexWorkflowStepDefinition` on `WorkflowStepDefinition`();
CREATE edge `filter` ();
CREATE EDGE INDEX `index_filter` on `filter`();
CREATE edge `activities` ();
CREATE EDGE INDEX `index_activities` on `activities`();
CREATE edge `on_success` ();
CREATE EDGE INDEX `index_on_success` on `on_success`();
CREATE edge `on_failure` ();
CREATE EDGE INDEX `index_on_failure` on `on_failure`();
CREATE tag `ConstraintClause` (`operator` string NULL  , `vertex_type_system` string NULL  , `value` string NULL  );
CREATE TAG INDEX `IndexConstraintClause` on `ConstraintClause`();
CREATE tag `Directives` (`value` string NULL  , `vertex_type_system` string NULL  );
CREATE TAG INDEX `IndexDirectives` on `Directives`();
CREATE tag `Metadata` (`name` string NULL  , `value` string NULL  , `vertex_type_system` string NULL  );
CREATE TAG INDEX `IndexMetadata` on `Metadata`();
CREATE tag `NodeTemplate` (`description` string NULL  , `name` string NULL  , `vertex_type_system` string NULL  );
CREATE TAG INDEX `IndexNodeTemplate` on `NodeTemplate`();
CREATE edge `directives` ();
CREATE EDGE INDEX `index_directives` on `directives`();
CREATE edge `requirements` ();
CREATE EDGE INDEX `index_requirements` on `requirements`();
CREATE edge `artifacts` ();
CREATE EDGE INDEX `index_artifacts` on `artifacts`();
CREATE edge `copy` ();
CREATE EDGE INDEX `index_copy` on `copy`();
CREATE tag `Occurrences` (`vertex_type_system` string NULL  , `minimum` string NULL  , `maximum` string NULL  );
CREATE TAG INDEX `IndexOccurrences` on `Occurrences`();
CREATE tag `RelationshipTemplate` (`name` string NULL  , `vertex_type_system` string NULL  , `description` string NULL  );
CREATE TAG INDEX `IndexRelationshipTemplate` on `RelationshipTemplate`();
CREATE tag `ArtifactType` (`vertex_type_system` string NULL  , `name` string NULL  , `version` string NULL  , `description` string NULL  , `mime_type` string NULL, `file_ext` string NULL  );
CREATE TAG INDEX `IndexArtifactType` on `ArtifactType`();
CREATE edge `derived_from` ();
CREATE EDGE INDEX `index_derived_from` on `derived_from`();
CREATE tag `CapabilityType` (`name` string NULL  , `vertex_type_system` string NULL  , `version` string NULL  , `description` string NULL  );
CREATE TAG INDEX `IndexCapabilityType` on `CapabilityType`();
CREATE tag `DataType` (`vertex_type_system` string NULL  , `name` string NULL  , `version` string NULL  , `description` string NULL  );
CREATE TAG INDEX `IndexDataType` on `DataType`();
CREATE tag `GroupType` (`vertex_type_system` string NULL  , `name` string NULL  , `version` string NULL  , `description` string NULL  );
CREATE TAG INDEX `IndexGroupType` on `GroupType`();
CREATE tag `InterfaceType` (`vertex_type_system` string NULL  , `name` string NULL  , `version` string NULL  , `description` string NULL  );
CREATE TAG INDEX `IndexInterfaceType` on `InterfaceType`();
CREATE tag `NodeType` (`vertex_type_system` string NULL  , `name` string NULL  , `version` string NULL  , `description` string NULL  );
CREATE TAG INDEX `IndexNodeType` on `NodeType`();
CREATE tag `PolicyType` (`vertex_type_system` string NULL  , `name` string NULL  , `version` string NULL  , `description` string NULL  );
CREATE TAG INDEX `IndexPolicyType` on `PolicyType`();
CREATE tag `RelationshipType` (`vertex_type_system` string NULL  , `name` string NULL  , `version` string NULL  , `description` string NULL  );
CREATE TAG INDEX `IndexRelationshipType` on `RelationshipType`();
CREATE edge `valid_target_types` ();
CREATE EDGE INDEX `index_valid_target_types` on `valid_target_types`()
