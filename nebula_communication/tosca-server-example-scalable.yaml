tosca_definitions_version: tosca_simple_yaml_1_0
capability_types:
  tosca.capabilities.Attachment:
    attributes: {}
    derived_from: tosca.capabilities.Root
    description: 'This is the default TOSCA type that should be used or extended to
      define an attachment capability of a (logical) infrastructure device node (e.g.,
      BlockStorage node) '
    metadata: {}
    properties: {}
    valid_source_types: []
  tosca.capabilities.Container:
    attributes: {}
    derived_from: tosca.capabilities.Root
    description: 'The Container capability, when included on a Node Type or Template
      definition, indicates that the node can act as a container for (or a host for)
      one or more other declared Node Types. '
    metadata: {}
    properties:
      cpu_frequency:
        constraints:
        - greater_or_equal: 0.1 GHz
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: scalar-unit.frequency
      disk_size:
        constraints:
        - greater_or_equal: 0 MB
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: scalar-unit.size
      mem_size:
        constraints:
        - greater_or_equal: 0 MB
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: scalar-unit.size
      num_cpus:
        constraints:
        - greater_or_equal: 1
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: integer
    valid_source_types: []
  tosca.capabilities.Endpoint:
    attributes: {}
    derived_from: tosca.capabilities.Root
    description: 'This is the default TOSCA type that should be used or extended to
      define a network endpoint capability. This includes the information to express
      a basic endpoint with a single port or a complex endpoint with multiple ports.
      By default the Endpoint is assumed to represent an address on a private network
      unless otherwise specified. '
    metadata: {}
    properties:
      initiator:
        constraints:
        - valid_values:
          - source
          - target
          - peer
        default: source
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: string
      ip_address:
        constraints: []
        default: 0.0.0.0/0
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: string
      network_name:
        constraints: []
        default: PRIVATE
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: string
      port:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: tosca.datatypes.network.PortDef
      port_name:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: string
      ports:
        constraints:
        - min_length: 1
        entry_schema:
          constraints: []
          entry_schema: {}
          key_schema: {}
          type: tosca.datatypes.network.PortSpec
        key_schema: {}
        metadata: {}
        required: false
        type: map
      protocol:
        constraints: []
        default: tcp
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: true
        type: string
      secure:
        constraints: []
        default: false
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: boolean
      url_path:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: string
    valid_source_types: []
  tosca.capabilities.Endpoint.Admin:
    attributes: {}
    derived_from: tosca.capabilities.Endpoint
    description: 'This is the default TOSCA type that should be used or extended to
      define a specialized administrator endpoint capability. '
    metadata: {}
    properties:
      secure:
        constraints:
        - equal: 'True'
        default: true
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: boolean
    valid_source_types: []
  tosca.capabilities.Node:
    attributes: {}
    derived_from: tosca.capabilities.Root
    description: The Node capability indicates the base capabilities of a TOSCA Node
      Type.
    metadata: {}
    properties: {}
    valid_source_types: []
  tosca.capabilities.OperatingSystem:
    attributes: {}
    derived_from: tosca.capabilities.Root
    metadata: {}
    properties:
      architecture:
        constraints: []
        description: 'The host Operating System (OS) architecture. '
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: string
      distribution:
        constraints: []
        description: "The host Operating System (OS) distribution. Examples of valid\
          \ values for an \u201Ctype\u201D of \u201CLinux\u201D would include: debian,\
          \ fedora, rhel and ubuntu. "
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: string
      type:
        constraints: []
        description: 'The host Operating System (OS) type. '
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: string
      version:
        constraints: []
        description: 'The host Operating System version. '
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: version
    valid_source_types: []
  tosca.capabilities.Root:
    attributes: {}
    description: 'The TOSCA root Capability Type all other TOSCA base Capability Types
      derive from. '
    metadata: {}
    properties: {}
    valid_source_types: []
  tosca.capabilities.Scalable:
    attributes: {}
    derived_from: tosca.capabilities.Root
    metadata: {}
    properties:
      default_instances:
        constraints: []
        description: 'An optional property that indicates the requested default number
          of instances that should be the starting number of instances a TOSCA orchestrator
          should attempt to allocate. The value for this property MUST be in the range
          between the values set for min_instances and max_instances properties. '
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: integer
      max_instances:
        constraints: []
        default: 1
        description: 'This property is used to indicate the maximum number of instances
          that should be created for the associated TOSCA Node Template by a TOSCA
          orchestrator. '
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: true
        type: integer
      min_instances:
        constraints: []
        default: 1
        description: 'This property is used to indicate the minimum number of instances
          that should be created for the associated TOSCA Node Template by a TOSCA
          orchestrator. '
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: true
        type: integer
    valid_source_types: []
  tosca.capabilities.network.Bindable:
    attributes: {}
    derived_from: tosca.capabilities.Node
    description: 'A node type that includes the Bindable capability indicates that
      it can be pointed by tosca.relationships.network.BindsTo relationship type,
      which represents a network association relationship between Port and Compute
      node types. '
    metadata: {}
    properties: {}
    valid_source_types: []
data_types:
  tosca.datatypes.Credential:
    constraints: []
    derived_from: tosca.datatypes.Root
    entry_schema: {}
    key_schema: {}
    metadata: {}
    properties:
      keys:
        constraints: []
        entry_schema:
          constraints: []
          entry_schema: {}
          key_schema: {}
          type: string
        key_schema: {}
        metadata: {}
        required: false
        type: map
      protocol:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: string
      token:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: true
        type: string
      token_type:
        constraints: []
        default: password
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: true
        type: string
      user:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: string
  tosca.datatypes.Root:
    constraints: []
    description: 'The TOSCA root Data Type all other TOSCA base Data Types derive
      from '
    entry_schema: {}
    key_schema: {}
    metadata: {}
    properties: {}
  tosca.datatypes.network.NetworkInfo:
    constraints: []
    derived_from: tosca.datatypes.Root
    entry_schema: {}
    key_schema: {}
    metadata: {}
    properties:
      addresses:
        constraints: []
        entry_schema:
          constraints: []
          entry_schema: {}
          key_schema: {}
          type: string
        key_schema: {}
        metadata: {}
        required: false
        type: list
      network_id:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: string
      network_name:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: string
  tosca.datatypes.network.PortDef:
    constraints:
    - in_range:
      - 1
      - 65535
    derived_from: tosca.datatypes.Root
    entry_schema: {}
    key_schema: {}
    metadata: {}
    properties: {}
  tosca.datatypes.network.PortInfo:
    constraints: []
    derived_from: tosca.datatypes.Root
    entry_schema: {}
    key_schema: {}
    metadata: {}
    properties:
      addresses:
        constraints: []
        entry_schema:
          constraints: []
          entry_schema: {}
          key_schema: {}
          type: string
        key_schema: {}
        metadata: {}
        required: false
        type: list
      mac_address:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: string
      network_id:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: string
      port_id:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: string
      port_name:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: string
  tosca.datatypes.network.PortSpec:
    constraints: []
    derived_from: tosca.datatypes.Root
    entry_schema: {}
    key_schema: {}
    metadata: {}
    properties:
      protocol:
        constraints:
        - valid_values:
          - udp
          - tcp
          - igmp
          - icmp
        default: tcp
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: true
        type: string
      source:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: tosca.datatypes.network.PortDef
      source_range:
        constraints:
        - in_range:
          - 1
          - 65535
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: range
      target:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: tosca.datatypes.network.PortDef
      target_range:
        constraints:
        - in_range:
          - 1
          - 65535
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: range
group_types: {}
interface_types:
  tosca.interfaces.Root:
    description: 'The TOSCA root Interface Type all other TOSCA base Interface Types
      derive from '
    inputs: {}
    metadata: {}
    notifications: {}
    operations: {}
  tosca.interfaces.node.lifecycle.Standard:
    derived_from: tosca.interfaces.Root
    description: This lifecycle interface defines the essential, normative operations
      that TOSCA nodes may support.
    inputs: {}
    metadata: {}
    notifications: {}
    operations: {}
  tosca.interfaces.relationship.Configure:
    derived_from: tosca.interfaces.Root
    description: 'The lifecycle interfaces define the essential, normative operations
      that each TOSCA Relationship Types may support. '
    inputs: {}
    metadata: {}
    notifications: {}
    operations: {}
node_types:
  tosca.nodes.BlockStorage:
    artifacts: {}
    attributes: {}
    capabilities:
      attachment:
        attributes: {}
        properties: {}
        type: tosca.capabilities.Attachment
        valid_source_types: []
    derived_from: tosca.nodes.Root
    description: 'The TOSCA BlockStorage node currently represents a server-local
      block storage device (i.e., not shared) offering evenly sized blocks of data
      from which raw storage volumes can be created. '
    interfaces: {}
    metadata: {}
    properties:
      size:
        constraints:
        - greater_or_equal: 1 MB
        entry_schema: {}
        key_schema: {}
        metadata: {}
        type: scalar-unit.size
      snapshot_id:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: string
      volume_id:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: string
    requirements: []
  tosca.nodes.Compute:
    artifacts: {}
    attributes: {}
    capabilities:
      binding:
        attributes: {}
        properties: {}
        type: tosca.capabilities.network.Bindable
        valid_source_types: []
      endpoint:
        attributes: {}
        properties: {}
        type: tosca.capabilities.Endpoint.Admin
        valid_source_types: []
      host:
        attributes: {}
        properties: {}
        type: tosca.capabilities.Container
        valid_source_types:
        - tosca.nodes.SoftwareComponent
      os:
        attributes: {}
        properties: {}
        type: tosca.capabilities.OperatingSystem
        valid_source_types: []
      scalable:
        attributes: {}
        properties: {}
        type: tosca.capabilities.Scalable
        valid_source_types: []
    derived_from: tosca.nodes.Root
    description: 'The TOSCA Compute node represents one or more real or virtual processors
      of software applications or services along with other essential local resources. '
    interfaces: {}
    metadata: {}
    properties:
      meta:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: string
      networks:
        constraints: []
        entry_schema:
          constraints: []
          entry_schema: {}
          key_schema: {}
          type: tosca.datatypes.network.NetworkInfo
        key_schema: {}
        metadata: {}
        required: false
        type: map
      ports:
        constraints: []
        entry_schema:
          constraints: []
          entry_schema: {}
          key_schema: {}
          type: tosca.datatypes.network.PortInfo
        key_schema: {}
        metadata: {}
        required: false
        type: map
      private_address:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: string
      public_address:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: string
    requirements:
    - local_storage:
        capability: tosca.capabilities.Attachment
        node: tosca.nodes.BlockStorage
        occurrences:
        - 0
        - UNBOUNDED
        relationship:
          type: tosca.relationships.AttachesTo
  tosca.nodes.Root:
    artifacts: {}
    attributes: {}
    capabilities:
      feature:
        attributes: {}
        properties: {}
        type: tosca.capabilities.Node
        valid_source_types: []
    description: 'The TOSCA root node all other TOSCA base node types derive from. '
    interfaces:
      Standard:
        notifications: {}
        operations: {}
        type: tosca.interfaces.node.lifecycle.Standard
    metadata: {}
    properties:
      state:
        constraints: []
        description: "The state of the node instance. See section \u201CNode States\u201D\
          \ for allowed values. "
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: string
      tosca_id:
        constraints: []
        description: 'A unique identifier of the realized instance of a Node Template
          that derives from any TOSCA normative type. '
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: string
      tosca_name:
        constraints: []
        description: 'This attribute reflects the name of the Node Template as defined
          in the TOSCA service template. '
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: string
    requirements:
    - dependency:
        capability: tosca.capabilities.Node
        node: tosca.nodes.Root
        occurrences:
        - 0
        - UNBOUNDED
        relationship:
          type: tosca.relationships.DependsOn
  tosca.nodes.SoftwareComponent:
    artifacts: {}
    attributes: {}
    capabilities: {}
    derived_from: tosca.nodes.Root
    description: 'The TOSCA SoftwareComponent node represents a generic software component
      that can be managed and run by a TOSCA Compute Node Type. '
    interfaces: {}
    metadata: {}
    properties:
      admin_credential:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: tosca.datatypes.Credential
      component_version:
        constraints: []
        description: 'Software component version. '
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: version
    requirements:
    - host:
        capability: tosca.capabilities.Container
        node: tosca.nodes.Compute
        relationship:
          type: tosca.relationships.HostedOn
policy_types: {}
relationship_types:
  tosca.relationships.AttachesTo:
    attributes: {}
    derived_from: tosca.relationships.Root
    description: 'This type represents an attachment relationship between two nodes.
      For example, an AttachesTo relationship type would be used for attaching a storage
      node to a Compute node. '
    interfaces: {}
    metadata: {}
    properties:
      device:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: false
        type: string
      location:
        constraints:
        - min_length: 1
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: true
        type: string
    valid_target_types:
    - tosca.capabilities.Attachment
  tosca.relationships.DependsOn:
    attributes: {}
    derived_from: tosca.relationships.Root
    description: This type represents a general dependency relationship between two
      nodes.
    interfaces: {}
    metadata: {}
    properties: {}
    valid_target_types:
    - tosca.capabilities.Node
  tosca.relationships.HostedOn:
    attributes: {}
    derived_from: tosca.relationships.Root
    description: This type represents a hosting relationship between two nodes.
    interfaces: {}
    metadata: {}
    properties: {}
    valid_target_types:
    - tosca.capabilities.Container
  tosca.relationships.Root:
    attributes:
      state:
        entry_schema: {}
        key_schema: {}
        type: string
      tosca_id:
        entry_schema: {}
        key_schema: {}
        type: string
    description: 'The TOSCA root Relationship Type all other TOSCA base Relationship
      Types derive from. '
    interfaces:
      Configure:
        notifications: {}
        operations: {}
        type: tosca.interfaces.relationship.Configure
    metadata: {}
    properties:
      tosca_name:
        constraints: []
        entry_schema: {}
        key_schema: {}
        metadata: {}
        required: true
        type: string
    valid_target_types: []
topology_template:
  node_templates:
    testing_tosca:
      type: tosca.nodes.Compute
      properties:
        meta: "cube_master=true"
        public_address: 10.10.10.10
        networks:
          default:
            network_name: test-two-routers
      capabilities:
        host:
          properties:
            num_cpus: 1
            disk_size: 5 GiB
            mem_size: 1024 MiB
        endpoint:
          properties:
            protocol: tcp
            port: 22
            initiator: target
            ip_address: 0.0.0.0
        os:
          properties:
            architecture: x86_64
            type: ubuntu
            distribution: xenial
            version: 16.04
        scalable:
          properties:
            min_instances: 1
            default_instances: 2
            max_instances: 2
    software_for_cumulus:
      requirements:
        - host: testing_tosca
      type: tosca.nodes.SoftwareComponent
      interfaces:
        Standard:
          create:
            implementation: ansible-operation-example.yaml